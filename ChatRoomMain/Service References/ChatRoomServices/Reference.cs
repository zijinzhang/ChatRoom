//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatRoomMain.ChatRoomServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatRoomServices.IChatRoomSe1rvices")]
    public interface IChatRoomSe1rvices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoomSe1rvices/Add", ReplyAction="http://tempuri.org/IChatRoomSe1rvices/AddResponse")]
        void Add(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoomSe1rvices/Add", ReplyAction="http://tempuri.org/IChatRoomSe1rvices/AddResponse")]
        System.Threading.Tasks.Task AddAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoomSe1rvices/Delete", ReplyAction="http://tempuri.org/IChatRoomSe1rvices/DeleteResponse")]
        void Delete(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoomSe1rvices/Delete", ReplyAction="http://tempuri.org/IChatRoomSe1rvices/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoomSe1rvices/ShowMessage", ReplyAction="http://tempuri.org/IChatRoomSe1rvices/ShowMessageResponse")]
        string[] ShowMessage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoomSe1rvices/ShowMessage", ReplyAction="http://tempuri.org/IChatRoomSe1rvices/ShowMessageResponse")]
        System.Threading.Tasks.Task<string[]> ShowMessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoomSe1rvices/Login", ReplyAction="http://tempuri.org/IChatRoomSe1rvices/LoginResponse")]
        bool Login(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoomSe1rvices/Login", ReplyAction="http://tempuri.org/IChatRoomSe1rvices/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoomSe1rvices/Logout", ReplyAction="http://tempuri.org/IChatRoomSe1rvices/LogoutResponse")]
        string Logout(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatRoomSe1rvices/Logout", ReplyAction="http://tempuri.org/IChatRoomSe1rvices/LogoutResponse")]
        System.Threading.Tasks.Task<string> LogoutAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatRoomSe1rvicesChannel : ChatRoomMain.ChatRoomServices.IChatRoomSe1rvices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatRoomSe1rvicesClient : System.ServiceModel.ClientBase<ChatRoomMain.ChatRoomServices.IChatRoomSe1rvices>, ChatRoomMain.ChatRoomServices.IChatRoomSe1rvices {
        
        public ChatRoomSe1rvicesClient() {
        }
        
        public ChatRoomSe1rvicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChatRoomSe1rvicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatRoomSe1rvicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatRoomSe1rvicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(string message) {
            base.Channel.Add(message);
        }
        
        public System.Threading.Tasks.Task AddAsync(string message) {
            return base.Channel.AddAsync(message);
        }
        
        public void Delete(string message) {
            base.Channel.Delete(message);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string message) {
            return base.Channel.DeleteAsync(message);
        }
        
        public string[] ShowMessage() {
            return base.Channel.ShowMessage();
        }
        
        public System.Threading.Tasks.Task<string[]> ShowMessageAsync() {
            return base.Channel.ShowMessageAsync();
        }
        
        public bool Login(string userName) {
            return base.Channel.Login(userName);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string userName) {
            return base.Channel.LoginAsync(userName);
        }
        
        public string Logout(string userName) {
            return base.Channel.Logout(userName);
        }
        
        public System.Threading.Tasks.Task<string> LogoutAsync(string userName) {
            return base.Channel.LogoutAsync(userName);
        }
    }
}
